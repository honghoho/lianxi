<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--最初始的配置方式-->
    <!--    <bean id="UserDao" class="com.ho.dao.impl.UserDaoImpl"></bean>-->


    <!--    这是一种注入方式-->
    <!--<bean id="UserService" class="com.ho.service.impl.UserServiceImpl">
        <property name="userDao" ref="UserDao"></property>
    </bean>-->
    <!--    这个是另一种用p的注入方式，但是需要引入第四行的那个xmlns:p-->
    <!--    <bean id="UserService" class="com.ho.service.impl.UserServiceImpl" p:userDao-ref="UserDao"></bean>-->

    <!--构造函数用的就是这种注入方式,在service中用的-->
    <bean id="UserService" class="com.ho.service.impl.UserServiceImpl">
        <constructor-arg name="userDao" ref="UserDao"></constructor-arg>
    </bean>

    <!--    普通属性的注入 在DAO中-->
    <bean id="UserDao" class="com.ho.dao.impl.UserDaoImpl">
        <property name="username" value="haha"></property>
        <property name="age" value="20"></property>
        <!--        如果碰上了不同类型，比如list map 或者是对象之类的 -->
        <!--        这个是list-->
        <!--        <property name="123">-->
        <!--           <list>-->
        <!--               <value>123</value>-->
        <!--           </list>-->
        <!--            </property>-->
        <!--        这个是map,map的值有对象比如userdao,上面那个的情况下就用了ref-->
        <!--                    <property name="123">-->
        <!--                        <map>-->
        <!--                            <entry key="123" value-ref="UserDao"></entry>-->
        <!--                        </map>-->
        <!--                    </property>-->
    </bean>

<!--    这样可以引用别的文件-->
    <import resource="applicationContext-user.xml"></import>
</beans>